type ProjectData {
  projectId: ID!
  title: String!
  unlocks: [ID!]!
  importance: Int!
  status: String!
}

input CreateProjectInput {
  projectId: ID!
  title: String!
  unlocks: [ID!]!
  importance: Int!
  status: String!
}

input UpdateProjectInput {
  projectId: ID!
  title: String
  unlocks: [ID!]
  importance: Int
  status: String
}

type Mutation {
  createProject(input: CreateProjectInput!): ProjectData!
  updateProject(input: UpdateProjectInput!): ProjectData!
  deleteProject(projectId: ID!): Boolean
}

type Query {
  getProject(projectId: ID!): ProjectData!
  listProjects(unlocks: ID): [ProjectData!]!
}
